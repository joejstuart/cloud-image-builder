{
  "variables": {
    "account_file": "{{env `GOOGLE_APPLICATION_CREDENTIALS`}}",
      "project_id": "{{env `PROJECT_ID`}}",
      "disk_size": "{{env `DISK_SIZE`}}",
      "image_name": "{{env `IMAGE_NAME`}}",
      "machine_type": "{{env `MACHINE_TYPE`}}",
      "zone": "{{env `ZONE`}}",
      "kubevirt_version": "{{env `KUBEVIRT_VERSION`}}"
  },
  "builders": [
    {
      "type": "googlecompute",
      "account_file": "{{user `account_file`}}",
      "project_id": "{{user `project_id`}}",
      "source_image_family": "centos-7",
      "disk_size": "{{user `disk_size`}}",
      "image_description": "Kubevirt button based on {{user `kubevirt_version`}}",
      "image_name": "{{user `image_name`}}",
      "instance_name": "kubevirt-pipeline",
      "machine_type": "{{user `machine_type`}}",
      "ssh_username": "centos",
      "zone": "{{user `zone`}}",
      "image_licenses": ["projects/vm-options/global/licenses/enable-vmx"],
      "tags": ["packer"]
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "image-files/kubevirt-ansible",
      "destination": "/home/centos"
    },
    {
      "type": "file",
      "source": "image-files/cluster-wait.yml",
      "destination": "/home/centos/"
    },
    {
      "type": "file",
      "source": "image-files/virtctl",
      "destination": "/home/centos/"
    },
    {
      "type": "file",
      "source": "image-files/kubevirt-installer.service",
      "destination": "/home/centos/"
    },
    {
      "type": "shell",
      "inline": "sudo mv /home/centos/kubevirt-installer.service /usr/lib/systemd/system/"
    },
    {
      "type": "file",
      "source": "image-files/first-boot-centos.sh",
      "destination": "/home/centos/first-boot.sh"
    },
    {
      "type": "shell",
      "inline": "sudo mv /home/centos/first-boot.sh /usr/local/bin/"
    },
    {
      "type": "shell",
      "inline": "sudo systemctl daemon-reload"
    },
    {
      "type": "shell",
      "inline": "sudo systemctl enable kubevirt-installer"
    },
    {
      "type": "shell",
      "inline": "sudo yum install -y ansible docker jq bind-utils bind-libs cockpit"
    },
    {
      "type": "shell",
      "inline": "sudo yum update -y"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "packer-build-manifest.json",
      "strip_path": true
    }
  ]
}
